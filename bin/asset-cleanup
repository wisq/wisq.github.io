#!/usr/bin/env ruby

require 'dotenv'
require 'erb'
require 'yaml'

require 'aws-sdk-v1'
require 'time-lord'

Dotenv.load
config = YAML.load(ERB.new(File.read('s3_website.yml')).result)

class AWS::S3::S3Object
  def last_modified
    head[:last_modified].utc
  end

  def age
    Time.now - last_modified
  end

  def age_in_words
    TimeLord::Period.new(last_modified, Time.now).in_words
  end

  def asset_series_id
    File.basename(key).split(/[-\.]/, 3).values_at(0, 2).join('.')
  end
end

AWS.config(
  access_key_id:     config['s3_id'],
  secret_access_key: config['s3_secret']
)

bucket = AWS::S3.new.buckets[config['s3_bucket']]
cutoff = Time.now - 86400

bucket.objects.with_prefix('assets/').group_by(&:asset_series_id).each do |series_id, assets|
  assets.sort_by!(&:last_modified)

  keep = false
  until assets.empty?
    asset, next_asset = assets.shift, assets.first
    description = nil

    if next_asset.nil?
      description = "#{asset.key} was created #{asset.age_in_words}."
      keep = true
    else
      description = "#{asset.key} was replaced #{next_asset.age_in_words}."
      if asset.last_modified > cutoff
        keep = true
      elsif keep # we started keeping them but now we want to get rid of one -- sorting error?
        with_last_modified = assets.map { |obj| [obj.last_modified, obj] }
        raise "should not happen (sort error?): #{with_last_modified.inspect}"
      end
    end

    prefix = keep ? "Keeping:" : "Deleting:"
    puts "* #{prefix.ljust(9)} #{description}"
    asset.delete unless keep
  end
end
